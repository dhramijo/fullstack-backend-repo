name: Backend CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted # Use self-hosted runner

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      # Step 3: Build the Backend with Maven
      - name: Build with Maven
        run: |
          mvn clean install
        working-directory: "."

      # Step 4: Ensure Podman Machine is Started
      - name: Initialize and Start Podman Machine
        run: |
          if ! podman machine list | grep -q 'podman-machine-default'; then
            echo "Initializing Podman machine..."
            podman machine init --rootful || echo "Podman machine already initialized"
          fi
          podman machine start || echo "Podman machine already started"

      # Step 5: Build Image with Podman
      - name: Build Docker image with Podman
        run: |
          podman build -t backend-image:latest .

      # Step 6: Save Image for Minikube
      - name: Save Image for Minikube
        run: |
          podman save backend-image:latest -o backend-image.tar

      # Step 7: Copy Image into Minikube VM
      - name: Copy Image into Minikube
        run: |
          minikube cp backend-image.tar /tmp/

      # Step 8: Load Image into Minikube Docker
      - name: Load Image into Minikube Docker
        run: |
          minikube ssh "docker load -i /tmp/backend-image.tar"
        env:
          MINIKUBE_HOME: /tmp

      # Step 9: Set up Kubernetes
      - name: Set up Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      # Step 10: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl apply -f k8s/backend-ingress.yaml

      # Step 11: Restart Deployment
      - name: Restart Backend Deployment
        run: |
          kubectl rollout restart deployment backend-deployment

      # Step 12: Verify Deployment
      - name: Verify Deployment
        run: |
          kubectl get pods --all-namespaces
